package dev.thomazz.lucid.accessor.client.play;

import dev.thomazz.lucid.accessor.PacketAccessor;
import dev.thomazz.lucid.accessor.data.BlockPosition;
import dev.thomazz.lucid.accessor.data.Direction;
import dev.thomazz.lucid.accessor.data.conversion.Conversions;
import dev.thomazz.lucid.packet.PacketType;

/**
* Accessor class generated by script for packet type {@link PacketType.Play.Client#BLOCK_DIG}
* Some types in getters and setters may not be supported properly yet.
*/
public final class BlockDig extends PacketAccessor {
    public BlockDig(Object handle) {
        super(PacketType.Play.Client.BLOCK_DIG, handle);
    }

    public BlockDig() {
        super(PacketType.Play.Client.BLOCK_DIG);
    }

    public BlockPosition getPos() {
        return Conversions.getConverter(BlockPosition.class).fromHandle(this.get(0));
    }

    public void setPos(BlockPosition value) {
        this.set(0, Conversions.getConverter(BlockPosition.class).toHandle(value));
    }

    public Direction getDirection() {
        int ordinal = ((Enum<?>) this.get(1)).ordinal();
        return Direction.values()[ordinal];
    }

    public void setDirection(Direction value) {
        Class<?> enumClass = this.getType(1);
        Object object = enumClass.getEnumConstants()[value.ordinal()];
        this.set(1, object);
    }

    public PlayerDigType getAction() {
        int ordinal = ((Enum<?>) this.get(1)).ordinal();
        return PlayerDigType.values()[ordinal];
    }

    public void setAction(PlayerDigType value) {
        Class<?> enumClass = this.getType(1);
        Object object = enumClass.getEnumConstants()[value.ordinal()];
        this.set(2, object);
    }

    public int getSequence() {
        return this.get(3);
    }

    public void setSequence(int value) {
        this.set(3, value);
    }

    public enum PlayerDigType {
        STARTED_DIGGING,
        CANCELLED_DIGGING,
        FINISHED_DIGGING,
        DROP_ITEM_STACK,
        DROP_ITEM,
        FINISH_USING,
        SWAP_ITEM
    }
}
