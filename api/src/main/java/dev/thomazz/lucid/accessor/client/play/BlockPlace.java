package dev.thomazz.lucid.accessor.client.play;

import dev.thomazz.lucid.accessor.PacketAccessor;
import dev.thomazz.lucid.accessor.data.BlockPosition;
import dev.thomazz.lucid.accessor.data.Direction;
import dev.thomazz.lucid.accessor.data.conversion.Conversions;
import dev.thomazz.lucid.packet.PacketType;
import org.bukkit.inventory.ItemStack;

/**
* Accessor class generated by script for packet type {@link PacketType.Play.Client#BLOCK_PLACE}
* Some types in getters and setters may not be supported properly yet.
*/
public final class BlockPlace extends PacketAccessor {
    public BlockPlace(Object handle) {
        super(PacketType.Play.Client.BLOCK_PLACE, handle);
    }

    public BlockPlace() {
        super(PacketType.Play.Client.BLOCK_PLACE);
    }

    public Hand getHand() {
        return Conversions.convertEnum(Hand.class, this.get(1));
    }

    public void setHand(Hand value) {
        this.set(0, Conversions.convertEnum(this.type(1), value));
    }

    public int getSequence() {
        return this.get(1);
    }

    public void setSequence(int value) {
        this.set(1, value);
    }

    public BlockPosition getPosition() {
        return Conversions.getConverter(BlockPosition.class).fromHandle(this.get(0));
    }

    public void setPosition() {
        this.set(0, Conversions.getConverter(BlockPosition.class).toHandle(this.get(0)));
    }

    public Direction getFace() {
        return Direction.values()[(int) this.get(1)];
    }

    public void setFace(Direction value) {
        this.set(1, value.ordinal());
    }

    public ItemStack getItem() {
        return Conversions.getConverter(ItemStack.class).fromHandle(this.get(2));
    }

    public void setItem(ItemStack value) {
        this.set(2, Conversions.getConverter(ItemStack.class).toHandle(value));
    }

    public float getCursorX() {
        return this.get(3);
    }

    public void setCursorX(float value) {
        this.set(3, value);
    }

    public float getCursorY() {
        return this.get(4);
    }

    public void setCursorY(float value) {
        this.set(4, value);
    }

    public float getCursorZ() {
        return this.get(5);
    }

    public void setCursorZ(float value) {
        this.set(5, value);
    }

    public long getTimeStamp() {
        return this.get(6);
    }

    public void setTimeStamp(long value) {
        this.set(6, value);
    }

    public enum Hand {
        MAIN_HAND,
        OFF_HAND
    }
}
