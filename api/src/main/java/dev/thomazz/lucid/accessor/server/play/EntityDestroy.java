package dev.thomazz.lucid.accessor.server.play;

import dev.thomazz.lucid.accessor.PacketAccessor;
import dev.thomazz.lucid.packet.PacketType;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

/**
* Accessor class generated by script for packet type {@link PacketType.Play.Server#ENTITY_DESTROY}
* Some types in getters and setters may not be supported properly yet.
*/
public final class EntityDestroy extends PacketAccessor {
    public EntityDestroy(Object handle) {
        super(PacketType.Play.Server.ENTITY_DESTROY, handle);
    }

    public EntityDestroy() {
        super(PacketType.Play.Server.ENTITY_DESTROY);
    }

    public List<Integer> getEntityIds() {
        Class<?> type = this.type(0);
        if (List.class.isAssignableFrom(type)) {
            return this.get(0);
        } else {
            return Arrays.stream((int[]) this.get(0)).boxed().collect(Collectors.toList());
        }
    }

    public void setEntityIds(List<Integer> values) {
        Class<?> type = this.type(0);
        if (List.class.isAssignableFrom(type)) {
            this.set(0, values);
        } else {
            this.set(0, values.stream().mapToInt(i -> i).toArray());
        }
    }
}
