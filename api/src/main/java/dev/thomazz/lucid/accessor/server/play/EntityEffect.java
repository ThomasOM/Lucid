package dev.thomazz.lucid.accessor.server.play;

import dev.thomazz.lucid.accessor.PacketAccessor;
import dev.thomazz.lucid.packet.PacketType;
import dev.thomazz.lucid.util.ReflectionUtil;

import java.lang.reflect.Method;
import java.lang.reflect.Modifier;
import java.util.Arrays;

/**
* Accessor class generated by script for packet type {@link PacketType.Play.Server#ENTITY_EFFECT}
* Some types in getters and setters may not be supported properly yet.
*/
public final class EntityEffect extends PacketAccessor {
    public EntityEffect(Object handle) {
        super(PacketType.Play.Server.ENTITY_EFFECT, handle);
    }

    public EntityEffect() {
        super(PacketType.Play.Server.ENTITY_EFFECT);
    }

    public int getEntityId() {
        return this.get(3);
    }

    public void setEntityId(int value) {
        this.set(3, value);
    }

    public int getEffect() {
        Class<?> type = this.getType(4);

        if (!byte.class.isAssignableFrom(type)) {
            Method found = ReflectionUtil.findMethod(
                type, method -> Modifier.isStatic(method.getModifiers()), method ->
                    Arrays.equals(method.getParameterTypes(), new Class[]{int.class})
            );

            return ReflectionUtil.invokeMethod(found, null, this.get(4));
        }

        return this.get(4);
    }

    public void setEffect(int value) {
        Class<?> type = this.getType(4);

        if (!byte.class.isAssignableFrom(type)) {
            Method found = ReflectionUtil.findMethod(
                type, method -> Modifier.isStatic(method.getModifiers()), method ->
                    Arrays.equals(method.getParameterTypes(), new Class[]{type})
            );

            this.set(4, ReflectionUtil.invokeMethod(found, null, value));
            return;
        }

        this.set(4, value);
    }

    public byte getEffectAmplifier() {
        return this.get(5);
    }

    public void setEffectAmplifier(byte value) {
        this.set(5, value);
    }

    public int getEffectDurationTicks() {
        return this.get(6);
    }

    public void setEffectDurationTicks(int value) {
        this.set(6, value);
    }

    public byte getFlags() {
        return this.get(7);
    }

    public void setFlags(byte value) {
        this.set(7, value);
    }

    public Object getFactorData() {
        return this.get(8);
    }

    public void setFactorData(Object value) {
        this.set(8, value);
    }
}
