package dev.thomazz.lucid.accessor.server.play;

import dev.thomazz.lucid.accessor.PacketAccessor;
import dev.thomazz.lucid.accessor.data.WatchableObject;
import dev.thomazz.lucid.accessor.data.conversion.Conversions;
import dev.thomazz.lucid.packet.PacketType;
import java.util.List;
import java.util.stream.Collectors;

/**
* Accessor class generated by script for packet type {@link PacketType.Play.Server#ENTITY_METADATA}
* Some types in getters and setters may not be supported properly yet.
*/
public final class EntityMetadata extends PacketAccessor {
    public EntityMetadata(Object handle) {
        super(PacketType.Play.Server.ENTITY_METADATA, handle);
    }

    public EntityMetadata() {
        super(PacketType.Play.Server.ENTITY_METADATA);
    }

    public int getId() {
        return this.get(0);
    }

    public void setId(int value) {
        this.set(0, value);
    }

    public List<WatchableObject> getPackedItems() {
        return ((List<?>) this.get(1)).stream()
            .map(Conversions.getConverter(WatchableObject.class)::fromHandle)
            .collect(Collectors.toList());
    }

    public void setPackedItems(List<WatchableObject> value) {
        this.set(1, value.stream()
            .map(Conversions.getConverter(WatchableObject.class)::toHandle)
            .collect(Collectors.toList())
        );
    }
}
