package dev.thomazz.lucid.accessor.server.play;

import dev.thomazz.lucid.accessor.PacketAccessor;
import dev.thomazz.lucid.packet.PacketType;

/**
* Accessor class generated by script for packet type {@link PacketType.Play.Server#REL_ENTITY_MOVE}
* Some types in getters and setters may not be supported properly yet.
*/
public final class RelEntityMove extends PacketAccessor {
    public RelEntityMove(Object handle) {
        super(PacketType.Play.Server.REL_ENTITY_MOVE, handle);
    }

    public RelEntityMove() {
        super(PacketType.Play.Server.REL_ENTITY_MOVE);
    }

    public int getEntityId() {
        return this.get(0);
    }

    public void setEntityId(int value) {
        this.set(0, value);
    }

    public double getXa() {
        Class<?> type = this.getType(1);
        if (short.class.equals(type)) {
            return ((short) this.get(1)) / (32.0 * 128.0);
        } else {
            return ((byte) this.get(1)) / 32.0;
        }
    }

    public void setXa(double value) {
        Class<?> type = this.getType(1);
        if (short.class.equals(type)) {
            this.set(1, (short) (value * (32.0 * 128.0)));
        } else {
            this.set(1, (short) (value * 32.0));
        }
    }

    public double getYa() {
        Class<?> type = this.getType(2);
        if (short.class.equals(type)) {
            return ((short) this.get(2)) / (32.0 * 128.0);
        } else {
            return ((byte) this.get(2)) / 32.0;
        }
    }

    public void setYa(double value) {
        Class<?> type = this.getType(2);
        if (short.class.equals(type)) {
            this.set(2, (short) (value * (32.0 * 128.0)));
        } else {
            this.set(2, (short) (value * 32.0));
        }
    }

    public double getZa() {
        Class<?> type = this.getType(3);
        if (short.class.equals(type)) {
            return ((short) this.get(3)) / (32.0 * 128.0);
        } else {
            return ((byte) this.get(3)) / 32.0;
        }
    }

    public void setZa(double value) {
        Class<?> type = this.getType(3);
        if (short.class.equals(type)) {
            this.set(3, (short) (value * (32.0 * 128.0)));
        } else {
            this.set(3, (short) (value * 32.0));
        }
    }

    public byte getYRot() {
        return this.get(4);
    }

    public void setYRot(byte value) {
        this.set(4, value);
    }

    public byte getXRot() {
        return this.get(5);
    }

    public void setXRot(byte value) {
        this.set(5, value);
    }

    public boolean getOnGround() {
        return this.get(6);
    }

    public void setOnGround(boolean value) {
        this.set(6, value);
    }

    public boolean getHasRot() {
        return this.get(7);
    }

    public void setHasRot(boolean value) {
        this.set(7, value);
    }

    public boolean getHasPos() {
        return this.get(8);
    }

    public void setHasPos(boolean value) {
        this.set(8, value);
    }
}
